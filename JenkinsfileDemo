pipeline {
    agent any
    stages{
      stage('SCM') {
            steps {
                git url: 'https://github.com/MustBuildAdmin/EnterpriseResourcePlanning.git'
            }
        }
         stage('build && SonarQube analysis') {
            steps {
                withSonarQubeEnv('My SonarQube Server') {
                    // Optionally use a Maven environment you've configured already
                    withMaven(maven:'Maven 3.5') {
                        sh 'mvn clean package sonar:sonar'
                    }
                }
            }
        }
         stage("Quality Gate") {
            steps {
                timeout(time: 1, unit: 'HOURS') {
                    // Parameter indicates whether to set pipeline to UNSTABLE if Quality Gate fails
                    // true = set pipeline to UNSTABLE, false = don't
                    waitForQualityGate abortPipeline: true
                }
            }
        }
        stage('AWS Demo Release') {
            steps{
                sh 'sudo chmod -R 777 /var/www/html/'
                sh 'sudo rm -rf /var/www/html/erpdemo/*'
                sh 'scp -r /var/lib/jenkins/workspace/demo-v0.1/*  /var/www/html/erpdemo/'
                sh 'cd /var/www/html/erpdemo/'
                sh 'composer install --no-interaction'
                sh 'composer install --optimize-autoloader --no-dev'
                sh 'php artisan key:generate'
                sh 'sudo chmod -R 777 /var/www/html/'
            }
        }    
       
    }

}
